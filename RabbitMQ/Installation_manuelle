### Installer le serveur RabbitMQ sur chaque noeud.
### Installer le courtier de messages RabbitMQ sur chaque noeud.
```bash
sudo apt update
sudo apt install gnupg2 apt-transport-https curl
curl https://dl.bintray.com/rabbitmq/Keys/rabbitmq-release-signing-key.asc | sudo apt-key add -
echo "deb https://dl.bintray.com/rabbitmq/debian stretch main"              | sudo tee    /etc/apt/sources.list.d/rabbitmq.list
echo "deb https://dl.bintray.com/rabbitmq-erlang/debian buster erlang-22.x" | sudo tee -a /etc/apt/sources.list.d/rabbitmq.list
apt update
apt install rabbitmq-server
```

### Utilisez rabbitmq-diagnostics pour afficher la version de RabbitMQ.
```bash
sudo rabbitmq-diagnostics server_version
```
Asking node rabbit@buster for its RabbitMQ version...
3.7.18

### Configuration du premier nœud RabbitMQ
### Configuration du premier noeud RabbitMQ - rabbit.
### Définir le cookie Erlang.
```bash
sudo systemctl stop rabbitmq-server
echo "JFKZVCBYEISEQILVZMSD" | sudo tee /var/lib/rabbitmq/.erlang.cookie
sudo systemctl start rabbitmq-server
```
### Activer le plugin de gestion.
```bash
rabbitmq-plugins enable rabbitmq_management
```
### Définir un utilisateur admin avec un mot de passe.
```bash
sudo rabbitmqctl add_user admin password
sudo rabbitmqctl set_user_tags admin administrator
sudo rabbitmqctl set_permissions -p / admin ".*" ".*" ".*"
```
### Suppression de l'utilisateur invité.
```bash
sudo rabbitmqctl delete_user guest
```
### Configuration de nœuds RabbitMQ supplémentaires
### Configuration de nœuds RabbitMQ supplémentaires - renne et raton laveur.
### Définir le cookie Erlang.
```bash
sudo systemctl stop rabbitmq-server
echo "JFKZVCBYEISEQILVZMSD" | sudo tee /var/lib/rabbitmq/.erlang.cookie
sudo systemctl start rabbitmq-server
```

### Activer le plugin de gestion.
```bash
rabbitmq-plugins enable rabbitmq_management
```

### Rejoindre le cluster en spécifiant un membre existant.
```bash
sudo rabbitmqctl stop_app
sudo rabbitmqctl join_cluster rabbit@test01
sudo rabbitmqctl start_app
```

### Vérifier l'état du cluster
```bash
sudo rabbitmqctl cluster_status
```
### Vous pouvez également dresser la liste des nœuds en cours d'exécution.
```bash
sudo rabbitmqctl cluster_status --formatter=json | jq -r .running_nodes[]
```